<Sql TableName="Create_CKCustPoolAttribute" CustomScript="#CDATA">
    <CDATA name="CustomScript"><![CDATA[IF EXISTS
(
	SELECT *
	FROM SYS.views
	WHERE name = 'CKCustPoolAttribute' AND SCHEMA_ID = SCHEMA_ID('dbo')
)
DROP VIEW [dbo].[CKCustPoolAttribute]	
GO
CREATE VIEW CKCustPoolAttribute AS



With Oppo_Status as 
(
select top 1 with ties
	CROpportunityRevision.Companyid, 
	CROpportunityRevision.BAccountID,
	CROpportunity.Status,
	CROpportunity.StageID,
	CROpportunityProbability.Probability
from CROpportunity 
	inner join CROpportunityRevision 
	on CROpportunity.CompanyID = CROpportunityRevision.CompanyID
	and CROpportunity.OpportunityID = CROpportunityRevision.OpportunityID
	inner join CROpportunityProbability
	on CROpportunity.CompanyID = CROpportunityProbability.CompanyID
	and CROpportunity.StageID = CROpportunityProbability.StageCode
where BAccountID is not null  and CROpportunity.CompanyID > 0
order by row_number() over (partition by CROpportunityRevision.Companyid, 
	CROpportunityRevision.BAccountID order by CROpportunityProbability.Probability desc)
)


SELECT 
Contact.CompanyID, 
Contact.ContactID,
Contact.ContactType,


Case
	--Validated Lead and 沒被綁定 = 有效
	when Contact.ContactType = 'LD' and Contact.BAccountID is null and CRLead.RefContactID is null  then 'Y'
	--Other Leads = 無效
	when Contact.ContactType = 'LD' then 'N'
	--Other Entity =  有效
	else 'Y'
end as UpToDate,
--Contact.BAccountID,   -- Contact/Leads' Business Account or Business Account Itself
--CRLead.RefContactID as LeadContact, --Lead's Contact
--Contact.DuplicateStatus,

ISNULL(CExt_CLEVEL.ValueString, LCExt_CLEVEL.ValueString) AS AttributeCLEVEL,
--CExt_CLEVEL.ValueString as C_CLEVEL,
--LCExt_CLEVEL.ValueString as LC_CLEVEL,

ISNULL(BExt_Source.ValueString, CExt_Source.ValueString) AS AttributeSOURCE, 
--BExt_Source.ValueString as B_Source,
--CExt_Source.ValueString as C_Source,

ISNULL(BExt_Industry.ValueString,  LExt_Industry.ValueString)AS AttributeINDUSTRY,
--BExt_Industry.ValueString as B_Industry,
--LExt_Industry.ValueString as L_Industry

ISNULL(Contact.DefAddressID , BAccount.DefAddressID) AS AddressID,
--Contact.DefAddressID as C_AddressID,
--BAccount.DefAddressID as B_AddressID

Oppo_Status.Status,
Oppo_Status.StageID,
Oppo_Status.Probability

FROM     Contact 
	LEFT OUTER JOIN CRLead 
			 ON  Contact.CompanyID = CRLead.CompanyID 
			 AND Contact.ContactID = CRLead.ContactID 
    LEFT OUTER JOIN Contact as LeadContact  -- for Lead's Contact's NoteID
			 ON  CRLead.CompanyID = LeadContact.CompanyID
			 AND CRLead.RefContactID = LeadContact.ContactID

	LEFT OUTER JOIN BAccount 
			 ON  Contact.CompanyID = BAccount.CompanyID 
			 AND Contact.BAccountID = BAccount.BAccountID 

	LEFT OUTER JOIN Oppo_Status 
			 ON  BAccount.CompanyID = Oppo_Status.CompanyID
			 AND BAccount.BAccountID = Oppo_Status.BAccountID


/* 
Attribute CLEVEL說明
Lead's Contact  CLEVEL > Contact/Lead's CLEVEL
*/

	LEFT OUTER JOIN ContactKvExt AS CExt_CLEVEL   -- 蒐集客戶職階 Lead/Contact
			 ON  Contact.CompanyID = CExt_CLEVEL.CompanyID 
			 AND Contact.NoteID = CExt_CLEVEL.RecordID 
			 AND CExt_CLEVEL.FieldName = 'AttributeCLEVEL' 

	LEFT OUTER JOIN ContactKvExt AS LCExt_CLEVEL   -- 蒐集客戶職階 Lead'sContact
			 ON  LeadContact.CompanyID = LCExt_CLEVEL.CompanyID 
			 AND LeadContact.NoteID = LCExt_CLEVEL.RecordID 
			 AND LCExt_CLEVEL.FieldName = 'AttributeCLEVEL' 


/* 
AttributeSource說明
Lead只轉建Contact的情境#可能會多筆#不處理-->待Contact綁定BAccount就會顯示BAccount的Source
Lead 一開始抓自己的Source, 轉建BAccount就以BAccount為主
*/
			
	LEFT OUTER JOIN ContactKvExt AS CExt_Source   -- 蒐集Source Lead/Contact: Only Lead's has Source
			 ON  Contact.CompanyID = CExt_Source.CompanyID 
			 AND Contact.NoteID = CExt_Source.RecordID 
			 AND CExt_Source.FieldName = 'AttributeSOURCE' 		
			 
	LEFT OUTER JOIN BAccountKvExt AS BExt_Source -- 蒐集Source BAccount
			 ON  BAccount.CompanyID = BExt_Source.CompanyID 
			 AND BAccount.NoteID = BExt_Source.RecordID 
			 AND BExt_Source.FieldName = 'AttributeSOURCE' 



/* 
AttributeIndustry說明
Lead只轉建Contact的情境#可能會多筆#不處理-->待Contact綁定BAccount就會顯示BAccount的Industry
Lead 一開始抓自己的Industry, 轉建BAccount就以Industry為主
*/			 
			 			 
	LEFT OUTER JOIN ContactKvExt AS LExt_Industry   --Lead's Industry
			 ON  Contact.CompanyID = LExt_Industry.CompanyID 
			 AND Contact.NoteID = LExt_Industry.RecordID 
			 AND LExt_Industry.FieldName = 'AttributeINDUSTRY' 

	LEFT OUTER JOIN BAccountKvExt AS BExt_Industry  --BAccount's Industry
			ON BAccount.CompanyID = BExt_Industry.CompanyID 
			AND BAccount.NoteID = BExt_Industry.RecordID 
			AND BExt_Industry.FieldName = 'AttributeINDUSTRY'
			
WHERE  (Contact.ContactType IN ('LD', 'AP', 'PN'))]]></CDATA>
</Sql>